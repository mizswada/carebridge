generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model audit {
  auditID          Int       @id @default(autoincrement())
  auditIP          String?   @db.VarChar(255)
  auditURL         String?   @db.VarChar(255)
  auditURLMethod   String?   @db.VarChar(255)
  auditURLPayload  String?   @db.VarChar(255)
  auditCreatedDate DateTime? @db.DateTime(0)
}

model user {
  userID            Int                 @id @default(autoincrement())
  userSecretKey     String?             @db.VarChar(255)
  userCategoryCode  String?             @db.VarChar(100)
  userUsername      String?             @db.VarChar(255)
  userPassword      String?             @db.VarChar(255)
  userFullName      String?             @db.VarChar(255)
  userEmail         String?             @db.VarChar(255)
  userPhone         String?             @db.VarChar(255)
  userStatus        String?             @db.VarChar(255)
  userCreatedDate   DateTime?           @db.DateTime(0)
  userModifiedDate  DateTime?           @db.DateTime(0)
  user_association  user_association[]
  user_care_taker   user_care_taker[]
  user_rehab_center user_rehab_center[]
  userrole          userrole[]
}

model role {
  roleID           Int        @id @default(autoincrement())
  roleName         String?    @db.VarChar(255)
  roleDescription  String?    @db.VarChar(255)
  roleStatus       String?    @db.VarChar(255)
  roleCreatedDate  DateTime?  @db.DateTime(0)
  roleModifiedDate DateTime?  @db.DateTime(0)
  userrole         userrole[]
}

model lookup {
  lookupID                                                              Int                 @id @default(autoincrement())
  lookupOrder                                                           Int?
  lookupTitle                                                           String?             @db.VarChar(255)
  lookupRefCode                                                         String?             @db.VarChar(255)
  lookupValue                                                           String?             @db.VarChar(255)
  lookupType                                                            String?             @db.VarChar(255)
  lookupStatus                                                          String?             @db.VarChar(255)
  lookupCreatedDate                                                     DateTime?           @db.DateTime(0)
  lookupModifiedDate                                                    DateTime?           @db.DateTime(0)
  user_association_user_association_association_address_countryTolookup user_association[]  @relation("user_association_association_address_countryTolookup")
  user_association_user_association_association_address_stateTolookup   user_association[]  @relation("user_association_association_address_stateTolookup")
  user_care_taker_user_care_taker_address_stateTolookup                 user_care_taker[]   @relation("user_care_taker_address_stateTolookup")
  user_care_taker_user_care_taker_bank_account_nameTolookup             user_care_taker[]   @relation("user_care_taker_bank_account_nameTolookup")
  user_care_taker_user_care_taker_genderTolookup                        user_care_taker[]   @relation("user_care_taker_genderTolookup")
  user_care_taker_user_care_taker_health_statusTolookup                 user_care_taker[]   @relation("user_care_taker_health_statusTolookup")
  user_care_taker_user_care_taker_nationalityTolookup                   user_care_taker[]   @relation("user_care_taker_nationalityTolookup")
  user_care_taker_user_care_taker_qualificationsTolookup                user_care_taker[]   @relation("user_care_taker_qualificationsTolookup")
  user_care_taker_user_care_taker_working_hoursTolookup                 user_care_taker[]   @relation("user_care_taker_working_hoursTolookup")
  user_rehab_center_user_rehab_center_center_address_countryTolookup    user_rehab_center[] @relation("user_rehab_center_center_address_countryTolookup")
  user_rehab_center_user_rehab_center_center_address_stateTolookup      user_rehab_center[] @relation("user_rehab_center_center_address_stateTolookup")
}

model userrole {
  userRoleID          Int      @id @default(autoincrement())
  userRoleUserID      Int      @default(0)
  userRoleRoleID      Int      @default(0)
  userRoleCreatedDate DateTime @db.DateTime(0)
  role                role     @relation(fields: [userRoleRoleID], references: [roleID], onUpdate: Restrict, map: "FK_userrole_role")
  user                user     @relation(fields: [userRoleUserID], references: [userID], onUpdate: Restrict, map: "FK_userrole_user")

  @@index([userRoleRoleID], map: "FK_userrole_role")
  @@index([userRoleUserID], map: "FK_userrole_user")
}

model category {
  category_id       Int                 @id @default(autoincrement())
  type              String              @db.VarChar(100)
  name              String              @db.VarChar(255)
  position          Int
  created_at        DateTime?           @default(now()) @db.Timestamp(0)
  updated_at        DateTime?           @db.Timestamp(0)
  deleted_at        DateTime?           @db.Timestamp(0)
  user_association  user_association[]
  user_rehab_center user_rehab_center[]
}

model survey_list {
  data_id               Int     @id
  survey_id             String  @default("0") @db.VarChar(255)
  vehicle_number        String  @default("0") @db.VarChar(255)
  vehicle_timein        String? @db.VarChar(255)
  vehicle_timeout       String? @db.VarChar(255)
  project_id            Int?
  project_name          String? @db.VarChar(255)
  project_eecode        String? @db.VarChar(255)
  project_parker_type   String? @db.VarChar(255)
  project_surveyor_name String? @db.VarChar(255)
  ref_id                Int?
  ref_type              String? @db.VarChar(255)
  vehicle_status        String? @db.VarChar(255)
  data_status           String? @db.VarChar(255)
  created_by            String? @db.VarChar(255)
  created_at            String? @db.VarChar(255)
  updated_by            String? @db.VarChar(255)
  updated_at            String? @db.VarChar(255)
}

model user_association {
  id                                                          Int       @id @default(autoincrement())
  user_id                                                     Int?
  association_type                                            Int
  registration_number                                         String    @db.VarChar(100)
  license_number                                              String?   @db.VarChar(100)
  establishment_date                                          DateTime? @db.Date
  association_address_line1                                   String?   @db.VarChar(255)
  association_address_line2                                   String?   @db.VarChar(255)
  association_address_city                                    String    @db.VarChar(255)
  association_address_postcode                                String    @db.VarChar(10)
  association_address_state                                   Int
  association_address_country                                 Int
  contact_person                                              String?   @db.VarChar(255)
  contact_number                                              String?   @db.VarChar(50)
  email_address                                               String?   @db.VarChar(100)
  website                                                     String?   @db.VarChar(255)
  affiliations                                                String?   @db.Text
  objectives                                                  String?   @db.Text
  membership_details                                          String?   @db.Text
  operational_area                                            String?   @db.VarChar(100)
  supporting_documents                                        String?   @db.Text
  annual_revenue                                              Decimal?  @db.Decimal(15, 2)
  association_logo                                            String?   @db.Text
  lookup_user_association_association_address_countryTolookup lookup    @relation("user_association_association_address_countryTolookup", fields: [association_address_country], references: [lookupID], onUpdate: Restrict, map: "association_address_country")
  lookup_user_association_association_address_stateTolookup   lookup    @relation("user_association_association_address_stateTolookup", fields: [association_address_state], references: [lookupID], onUpdate: Restrict, map: "association_address_state")
  category                                                    category  @relation(fields: [association_type], references: [category_id], onUpdate: Restrict, map: "association_type")
  user                                                        user?     @relation(fields: [user_id], references: [userID], onDelete: Restrict, onUpdate: Restrict, map: "fk_user")

  @@index([association_address_country], map: "association_address_country")
  @@index([association_address_state], map: "association_address_state")
  @@index([association_type], map: "association_type")
  @@index([user_id], map: "fk_user")
}

model user_care_taker {
  id                                               Int      @id @default(autoincrement())
  user_id                                          Int?
  identification_number                            String   @db.VarChar(100)
  date_of_birth                                    DateTime @db.Date
  gender                                           Int?
  nationality                                      Int?
  contact_number                                   String   @db.VarChar(50)
  email_address                                    String?  @db.VarChar(255)
  address_line_1                                   String   @db.VarChar(255)
  address_line_2                                   String?  @db.VarChar(255)
  address_postcode                                 String   @db.VarChar(10)
  address_city                                     String   @db.VarChar(100)
  address_state                                    Int?
  qualifications                                   Int?
  experience                                       String?  @db.Text
  specialization                                   String?  @db.VarChar(255)
  emergency_contact_name                           String?  @db.VarChar(255)
  emergency_contact_relationship                   String?  @db.VarChar(100)
  emergency_contact_number                         String?  @db.VarChar(50)
  affiliations                                     String?  @db.Text
  working_hours                                    Int?
  languages_spoken                                 String?  @db.Text
  supporting_documents                             String?  @db.Text
  health_status                                    Int?
  profile_picture                                  String?  @db.Text
  bank_account_name                                Int?
  bank_account_num                                 String?  @db.VarChar(255)
  bank_account_beneficiary                         String?  @db.VarChar(255)
  lookup_user_care_taker_address_stateTolookup     lookup?  @relation("user_care_taker_address_stateTolookup", fields: [address_state], references: [lookupID], onDelete: Restrict, onUpdate: Restrict, map: "address_state")
  lookup_user_care_taker_bank_account_nameTolookup lookup?  @relation("user_care_taker_bank_account_nameTolookup", fields: [bank_account_name], references: [lookupID], onDelete: Restrict, onUpdate: Restrict, map: "bank_account_name")
  user                                             user?    @relation(fields: [user_id], references: [userID], onDelete: Restrict, onUpdate: Restrict, map: "fk_user_id")
  lookup_user_care_taker_genderTolookup            lookup?  @relation("user_care_taker_genderTolookup", fields: [gender], references: [lookupID], onDelete: Restrict, onUpdate: Restrict, map: "gender")
  lookup_user_care_taker_health_statusTolookup     lookup?  @relation("user_care_taker_health_statusTolookup", fields: [health_status], references: [lookupID], onDelete: Restrict, onUpdate: Restrict, map: "health_status")
  lookup_user_care_taker_nationalityTolookup       lookup?  @relation("user_care_taker_nationalityTolookup", fields: [nationality], references: [lookupID], onDelete: Restrict, onUpdate: Restrict, map: "nationality")
  lookup_user_care_taker_qualificationsTolookup    lookup?  @relation("user_care_taker_qualificationsTolookup", fields: [qualifications], references: [lookupID], onDelete: Restrict, onUpdate: Restrict, map: "qualifications")
  lookup_user_care_taker_working_hoursTolookup     lookup?  @relation("user_care_taker_working_hoursTolookup", fields: [working_hours], references: [lookupID], onDelete: Restrict, onUpdate: Restrict, map: "working_hours")

  @@index([address_state], map: "address_state")
  @@index([bank_account_name], map: "bank_account_name")
  @@index([user_id], map: "fk_user_id")
  @@index([gender], map: "gender")
  @@index([health_status], map: "health_status")
  @@index([nationality], map: "nationality")
  @@index([qualifications], map: "qualifications")
  @@index([working_hours], map: "working_hours")
}

model user_rehab_center {
  id                                                      Int       @id @default(autoincrement())
  user_id                                                 Int?
  center_address_line1                                    String    @db.VarChar(255)
  center_address_line2                                    String?   @db.VarChar(255)
  center_address_city                                     String    @db.VarChar(255)
  center_address_postcode                                 String    @db.VarChar(10)
  center_address_state                                    Int
  center_address_country                                  Int
  registration_number                                     String    @db.VarChar(100)
  license_number                                          String    @db.VarChar(100)
  contact_number                                          String?   @db.VarChar(50)
  email_address                                           String?   @db.VarChar(100)
  center_type                                             Int?
  person_in_charge                                        String?   @db.VarChar(255)
  center_capacity                                         Int?
  operational_hours                                       String?   @db.VarChar(100)
  website                                                 String?   @db.VarChar(255)
  supporting_documents                                    String?   @db.Text
  affiliations                                            String?   @db.Text
  center_description                                      String?   @db.Text
  geolocation                                             String?   @db.VarChar(100)
  lookup_user_rehab_center_center_address_countryTolookup lookup    @relation("user_rehab_center_center_address_countryTolookup", fields: [center_address_country], references: [lookupID], onUpdate: Restrict, map: "center_address_country")
  lookup_user_rehab_center_center_address_stateTolookup   lookup    @relation("user_rehab_center_center_address_stateTolookup", fields: [center_address_state], references: [lookupID], onUpdate: Restrict, map: "center_address_state")
  category                                                category? @relation(fields: [center_type], references: [category_id], onDelete: Restrict, onUpdate: Restrict, map: "center_type")
  user                                                    user?     @relation(fields: [user_id], references: [userID], onDelete: Restrict, onUpdate: Restrict, map: "user_id")

  @@index([center_address_country], map: "center_address_country")
  @@index([center_address_state], map: "center_address_state")
  @@index([center_type], map: "center_type")
  @@index([user_id], map: "user_id")
}
